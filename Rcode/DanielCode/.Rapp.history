testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31), interconstant=FALSE)
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)
tt1
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)
tt1
for(ii in 1:100){#
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)#
standard_pval[ii]<-tt1$standard_pval}#
powerlev(standard_pval)
tt1
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)#
standard_pval<-g_pval<-iv_pval<-rep(0,100)#
for(ii in 1:100){#
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)#
standard_pval[ii]<-tt1$standard_pval#
g_pval[ii]<-tt1$g_pval#
iv_pval[ii]<-tt1$iv_pval#
}#
powerlev(standard_pval)
powerlev(standard_pval)
powerlev(g_pval)
powerlev(iv_pval)
standard_pval<-g_pval<-iv_pval<-rep(0,100)#
for(ii in 1:1000){#
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)#
standard_pval[ii]<-tt1$standard_pval#
g_pval[ii]<-tt1$g_pval#
iv_pval[ii]<-tt1$iv_pval#
}#
powerlev(standard_pval)#
powerlev(g_pval)#
powerlev(iv_pval)
testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = logit(0.5+0.05), a1_y =  logit(0.5+0.05), l1_y=0, interconstant=FALSE)
testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31), interconstant=FALSE)
testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = logit(0.5+0.05), a1_y =  logit(0.5+0.05), l1_y=0, interconstant=FALSE)
testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31), interconstant=FALSE)
p1
# It is realistic to assume that clinicians are more likely to prescribe #
# treatment(A0) to patients who are more ill(L0).  #
#
invlogit<-function(x){exp(x)/(1+exp(x))}#
logit<-function(x){log(x/(1-x))}#
powerlev<-function(x){c(mean(x<0.05), mean(x<0.10))}#
#
testing<-function(n=100, #
a_		=	0,#
a0_a1	=	0, #
l1_a1	=	0, #
a0_l1	=	0, #
u_		=	0, #
h_		=	0, #
a0_y		= 	a_, #
a1_y		=	a_, #
l1_y		=	0,#
interconstant=FALSE){#
justeffect<-FALSE#
if(n==1){justeffect<-TRUE}#
#
h_a0<-h_#
h_a1<-h_#
u0_l1<-u_#
u0_y<-u_#
g_h <- invlogit(0)#
H <- rbinom(n,1,g_h)		# 50/50#
#
g_u0<- invlogit(0)#
U0 <- rbinom(n,1, g_u0)		# 50/50#
#
inter_a0<-(-(h_a0*g_h))#
if(interconstant){inter_a0<-(-0.5)}#
g_a0 <- invlogit(inter_a0+(h_a0*H))#
A0 <- rbinom(n,1,g_a0)  # 50/50#
#
inter_l1<-(-mean(a0_l1*g_a0 +u0_l1*g_u0))#
if(interconstant){inter_l1<-(-0.75)}#
g_l1<-invlogit(inter_l1 + (a0_l1*A0 + u0_l1*U0) )#
L1<-rbinom(n,1,g_l1)		#
#
inter_a1<-(-mean(h_a1*g_h+a0_a1*g_a0+l1_a1*g_l1))#
if(interconstant){inter_a1<-(-0.95)}#
g_a1<-invlogit(inter_a1 + (h_a1*H+a0_a1*A0+l1_a1*L1))#
A1<-rbinom(n,1,g_a1)#
#
inter_y<-(-mean(a0_y*g_a0 + a1_y*g_a1+ u0_y*g_u0 +l1_y*g_l1))#
if(interconstant){inter_y<-(-1)}#
g_y<-invlogit(inter_y+(a0_y*A0 + a1_y*A1+ u0_y*U0+l1_y*L1))#
Y<-rbinom(n,1,g_y)#
summary(lm(g_y~A0+ A1+ U0+ L1))#
#
simdata<-data.frame(H,U0,A0,L1,A1,Y)#
simdata_obs<-data.frame(A0,L1,A1,Y)#
if(sum(c(unlist(table(simdata_obs)))<3)>0){print(paste("Sparse?", sum(c(unlist(table(simdata_obs)))<3)))}#
#
# Calculate the true treatment effect:#
# theta(a0,a1) = Pr(Y|A0=a0,A1=a1,U0,L1)*Pr(L1|A0=a0,U0)*Pr(U0)#
#
true_theta_function<-function(a0,a1){#
sum2<-0#
for(u0 in c(0,1)){#
	for(l1 in c(0,1)){#
		sum1<-#
((u0*g_u0) +(1-u0)*(1-g_u0))*#
#
(#
(l1*invlogit(inter_l1 + (a0_l1*a0 + u0_l1*u0) )) +#
((1-l1)*(1-invlogit(inter_l1 + (a0_l1*a0 + u0_l1*u0)))) #
)*#
invlogit(inter_y+(a0_y*a0 + a1_y*a1+ u0_y*u0 + l1_y*l1))#
#
		sum2<-sum2+sum1#
	}#
}#
return(sum2)}#
#
# The true joint causal effect of A on Y:#
true_effect<-round(true_theta_function(1,1)-true_theta_function(0,0),5)#
true_effect#
#
if(justeffect){return(true_effect)}#
if(!justeffect){#
########################################################################
# Functions#
####################################################################### #
makebeta<-function(veci, i, nm){#
            ss <- sum(veci)#
            nn <- length(veci)#
            pp <- (rbeta(nm, (ss + 1), (nn - ss + 1)))#
            if (i %in% 0) {return(1 - as.numeric(pp))}#
            if (i %in% 1) {return(as.numeric(pp))}}#
L1probB <- function(l1=c(1), a0=c(0,1), nm = 1) {#
            veci<-simdata$L1[simdata$A0 %in% a0]#
            makebeta(veci,l1, nm)}#
YprobB <- function(h=c(0,1), y=c(1), l1=c(0,1), a0=c(0,1), a1=c(0,1), nm = 1) {            #
veci<-simdata$Y[simdata$A0%in%a0 & simdata$A1%in%a1 & simdata$L1%in%l1]#
                  makebeta(veci,y, nm)}    #
################################################################## #
theta_function<-function(a0,a1){#
 sum2<-0#
	for(l1 in c(0,1)){#
		sum1<-L1probB(l1=l1, a0=a0)*YprobB(a0=a0, a1=a1,l1=l1)#
		sum2<-sum2+sum1}#
	return(sum2)}#
#
# The estimated joint causal effect of A on Y, by non-parametric g-computation:#
gcomp<-function(nB=500){#
	effect<-apply(cbind(1:nB),1,function(x){theta_function(1,1)-theta_function(0,0)})#
	pval<-1 - mean((effect) > 0)#
	twopval<-2*min(c((1 - mean((effect) > 0)), (1 - mean((effect) < 0))))#
	return(list(effect=mean(effect), onesidepval=pval, twosidepval=twopval))}#
g_effect<-gcomp()	#
g_effect#
###################################################################
library(lmtest)#
# The standard estimated effect is dilluted:#
glmmod1<-glm(Y~A0+A1+L1, family="binomial")#
#print(summary(glmmod1))#
glmmod0<-glm(Y~L1, family="binomial")#
standard_pval<-lrtest(glmmod1, glmmod0)$"Pr(>Chisq)"[2]#
#
# The total causal effect of A0 on Y and of A1 on Y could be estimated using standard adjustment:#
glmmod<-glm(Y~A0, family="binomial")#
#
standard_A0_onesidepval<-(1-pnorm(coef(summary(glmmod))[2,3]))#
standard_A1_onesidepval<-(1-pnorm(coef(summary(glmmod1))[3,3]))#
#
standard_A0_pval<-coef(summary(glmmod))[2,c(4)]#
standard_A1_pval<-coef(summary(glmmod1))[3,c(4)]#
####################################################################### #
# The IV estimated effect is dilluted:#
glmmod<-glm(Y~H, family="binomial")#
iv_onesidepval<-(1-pnorm(coef(summary(glmmod))[2,3]))#
iv_pval<-coef(summary(glmmod))[2,4]#
####################################################################### #
return(list(#
true_effect				= true_effect, #
g_effect					= g_effect$effect,#
#
standard_pval 			= standard_pval, #
standard_A0_pval			= standard_A0_pval,  #
standard_A1_pval			= standard_A1_pval,#
g_pval					= g_effect$twosidepval,#
iv_pval					= iv_pval, #
#
standard_A0_onesidepval = standard_A0_onesidepval,#
standard_A1_onesidepval = standard_A1_onesidepval,#
g_effect_onesidepval	= g_effect$onesidepval,#
iv_onesidepval			= iv_onesidepval#
))}}
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)
my_rel_power<-function(nSim=50, nn=200, type="NULL"){#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-rep(0,nSim)#
for(ii in 1:nSim){#
#
if(type=="NULL"){#
	t1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)}#
#
if(type=="direct"){#
t1<-testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = logit(0.5+0.05), a1_y =  logit(0.5+0.05), l1_y=0)#
}#
#
if(type=="indirect"){#
t1<-testing(1000, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31))}#
#
print(round(ii/nSim,3))#
#
	g_pval_vec[ii]<-t1$g_pval#
	iv_pval_vec[ii]<-t1$iv_pval#
	g_onepval_vec[ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[ii]<-t1$iv_onesidepval#
}#
#
return(#
list(#
g_pval=powerlev(g_pval_vec),#
iv_pval=powerlev(iv_pval_vec),#
g_pval1=powerlev(g_onepval_vec),#
iv_pval1=powerlev(iv_onepval_vec)#
))#
}
p1<-my_rel_power(100,500,"NULL")  # g-comp appears conservative (two-sided case in particular)
p1
p2<-my_rel_power(1000,500,"direct") # g-comp has 0.363 power#
p3<-my_rel_power(1000,500,"indirect")
p2
p3
t1<-testing(1000, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])
# Design of experiment#
lvls <- list(NA)#
#
fixlev<-c(0,0.5)  # levels for not interesting parameters#
seqlev<-c(1, 2, 3) # levels for  interesting parameters#
#
lvls[[1]] <- c(0)  # violation#
lvls[[2]] <- seqlev#
lvls[[3]] <- c(0, 0.2) #
lvls[[4]] <- 0.5#
lvls[[5]] <- seqlev#
lvls[[6]] <- c(0,0.2)#
lvls[[7]] <- c(0) # violation#
lvls[[8]] <- c(0)#
lvls[[9]] <- c(0)#
lvls[[10]] <- c(0)#
lvls[[11]] <- seqlev#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]], lvls[[9]], lvls[[10]], lvls[[11]]))#
dim(dsgn)#
dim(dsgn)[1]
# Design of experiment#
lvls <- list(NA)#
#
fixlev<-c(0,0.5)  # levels for not interesting parameters#
seqlev<-c(1, 2, 3) # levels for  interesting parameters#
#
lvls[[1]] <- c(0)  # violation#
lvls[[2]] <- seqlev#
lvls[[3]] <- c(0, 0.2) #
lvls[[4]] <- 0.5#
lvls[[5]] <- seqlev#
lvls[[6]] <- c(0,0.2)#
lvls[[7]] <- c(0) # violation#
lvls[[8]] <- c(0)#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]], lvls[[9]], lvls[[10]], lvls[[11]]))#
dim(dsgn)#
dim(dsgn)[1]
# Design of experiment#
lvls <- list(NA)#
#
fixlev<-c(0,0.5)  # levels for not interesting parameters#
seqlev<-c(1, 2, 3) # levels for  interesting parameters#
#
lvls[[1]] <- c(0)  # violation#
lvls[[2]] <- seqlev#
lvls[[3]] <- c(0, 0.2) #
lvls[[4]] <- 0.5#
lvls[[5]] <- seqlev#
lvls[[6]] <- c(0,0.2)#
lvls[[7]] <- c(0) # violation#
lvls[[8]] <- c(0)#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]
t1<-testing(1000, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])
i<-1
t1<-testing(1000, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])
t1
dim(dsgn)[1]
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()
i<-1
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)
for(ii in 1:nSim){#
#
t1<-testing(1000, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}
true_effect[[i]]
g_pval_vec[[i]]
iv_pval_vec[[i]]
nSim
nSim<-1000
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(-1, 0, 1, 2) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(-1, 0, 1) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(-1, 0, 1) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
#
for(i in 1:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
#
}
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(-1, 0, 1) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
#
for(i in 1:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
print("done1")#
print(i)#
}
i
i<-100
true_effect[[i]]
list(#
true_eff=powerlev(true_effect[[i]]),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)
list(#
true_eff=unique(true_effect[[i]]),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)
list(#
true_eff=unique(round(true_effect[[i]]),3),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)
list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)
results<-list()#
#
for(i in 1:dim(dsgn)[1]){#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)}
results
true_effect[[1]]
true_effect[[2]]
results
results_old<-results
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.5) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
#
for(i in 1:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
print("done1")#
print(i)#
}#
results<-list()#
#
for(i in 1:dim(dsgn)[1]){#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)}
seqlev<-c(0, 0.5) # levels for  interesting parameters
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]
nSim<-100
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
#
for(i in 1:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
print("done1")#
print(i)#
}#
results<-list()#
#
for(i in 1:dim(dsgn)[1]){#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)}
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
results<-list()#
for(i in 1:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)#
#
print("done1")#
print(i)#
}
# Design of experiment#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- seqlev#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
results<-list()#
for(i in 1:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)#
print(results[[i]])#
print("done1")#
print(i)#
}
dim(dsgn)[1]
for(i in 3000:dim(dsgn)[1]){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)#
print(results[[i]])#
print("done1")#
print(i)#
}
# Design of experiment#
nSim<-100#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- seqlev#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- 0.75#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]
nSim<-100#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- 0.5#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- 0.75#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]
source("~/functions1.R")#
# Design of experiment#
nSim<-100#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- 0.5#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- 0.75#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
results<-list()#
for(i in (dim(dsgn)[1]):1){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)#
print(results[[i]])#
print("done1")#
print(i)#
}
source("~/functions1.R")#
# Design of experiment#
nSim<-100#
lvls <- list(NA)#
seqlev<-c(0, 0.5, -0.25) # levels for  interesting parameters#
#
lvls[[1]] <- 0.5#
lvls[[2]] <- seqlev#
lvls[[3]] <- seqlev #
lvls[[4]] <- seqlev#
lvls[[5]] <- 1.75#
lvls[[6]] <- seqlev#
lvls[[7]] <- seqlev#
lvls[[8]] <- seqlev#
#
### factorial design#
dsgn <- as.matrix(expand.grid(lvls[[1]], lvls[[2]], lvls[[3]], lvls[[4]], lvls[[5]], lvls[[6]], lvls[[7]], lvls[[8]]))#
dim(dsgn)#
dim(dsgn)[1]#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-true_effect <-list()#
results<-list()#
for(i in (dim(dsgn)[1]):1){#
g_pval_vec[[i]]<-iv_pval_vec[[i]]<-g_onepval_vec[[i]]<-iv_onepval_vec[[i]]<-true_effect[[i]]<-rep(0,nSim)#
#
for(ii in 1:nSim){#
#
t1<-testing(300, a_=NA, a0_a1=dsgn[i, 1], l1_a1=dsgn[i, 2], a0_l1=dsgn[i, 3], u_=dsgn[i, 4], h_=dsgn[i, 5], a0_y = dsgn[i, 6], a1_y = dsgn[i, 7], l1_y=dsgn[i, 8])#
#
print(round(ii/nSim,3))#
	true_effect[[i]][ii]<-t1$true_effect#
	g_pval_vec[[i]][ii]<-t1$g_pval#
	iv_pval_vec[[i]][ii]<-t1$iv_pval#
	g_onepval_vec[[i]][ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[[i]][ii]<-t1$iv_onesidepval#
}#
#
results[[i]]<-list(#
true_eff=unique(round(true_effect[[i]],3)),#
g_pval=powerlev(g_pval_vec[[i]]),#
iv_pval=powerlev(iv_pval_vec[[i]]),#
g_pval1=powerlev(g_onepval_vec[[i]]),#
iv_pval1=powerlev(iv_onepval_vec[[i]])#
)#
print(results[[i]])#
print("done1")#
print(i)#
}
results
results$true_eff
results[[]]$true_eff
results[[700:729]]$true_eff
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = logit(0.5+0.05), a1_y =  logit(0.5+0.05), l1_y=0)
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31))
testing(1, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, l1_y=0)
logit(0.5+0.05)
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3.3*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
p1<-my_rel_power(1000,500,"NULL")  # g-comp appears conservative (two-sided case in particular)#
p2<-my_rel_power(1000,500,"direct") # g-comp has 0.370 power (iv: 0.074)#
p3<-my_rel_power(1000,500,"indirect") # g-comp has 0.351 power (iv: 0.064)
p1<-my_rel_power(1000,100,"NULL")  # g-comp appears conservative (two-sided case in particular)
p1<-my_rel_power(100,100,"NULL")  # g-comp appears conservative (two-sided case in particular)
p1
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.2*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.1*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, l1_y=0)
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.11*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3.3*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3.31*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3.33*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3.36*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=3.39*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=0.33*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.5*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=2.11*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.5*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=2.15*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.5*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.55*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.51*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.53*logit(0.5-0.31), u_=2, h_=0.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=0.5, l1_y=0)
testing(1, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=2.5, l1_y=0)
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.11*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.3*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.6*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.5*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.53*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.55*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.53*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.54*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.55*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.56*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(1, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.55*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.55*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.50*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.31))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2.5*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.31))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.3), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.3))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.29), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.29))
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))
testing(100, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=(2), h_=0.5)
standard_pval<-g_pval<-iv_pval<-rep(0,100)#
for(ii in 1:1000){#
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=(2), h_=0.5)#
standard_pval[ii]<-tt1$standard_pval#
g_pval[ii]<-tt1$g_pval#
iv_pval[ii]<-tt1$iv_pval#
}#
powerlev(standard_pval)  	# 0.334 0.450  	# biased AWAY from the NULL#
powerlev(g_pval) 			# 0.027 0.071	# substantially conservative#
powerlev(iv_pval)			# 0.063 0.107	# substantially liberal
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)
standard_pval<-g_pval<-iv_pval<-rep(0,100)#
for(ii in 1:100){#
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)#
standard_pval[ii]<-tt1$standard_pval#
g_pval[ii]<-tt1$g_pval#
iv_pval[ii]<-tt1$iv_pval#
}#
powerlev(standard_pval)  	# 0.334 0.450  	# biased AWAY from the NULL#
powerlev(g_pval) 			# 0.027 0.071	# substantially conservative#
powerlev(iv_pval)			# 0.063 0.107	# substantially liberal
# All direct effect  ( a0_y, a1_y):#
testing(100, a_=logit(0.5+0.05), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.045), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.0495), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.0475), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.0485), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.048), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)
testing(100, a_=logit(0.5+0.048), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.5*logit(0.5-0.31))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.48*logit(0.5-0.31))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.31))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2*logit(0.5-0.305))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.305))$true_effect
my_rel_power<-function(nSim=50, nn=200, type="NULL"){#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-rep(0,nSim)#
for(ii in 1:nSim){#
#
if(type=="NULL"){#
	t1<-testing(nn, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)}#
#
if(type=="direct"){#
t1<-testing(nn, a_=logit(0.5+0.048), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)#
}#
#
if(type=="indirect"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))}#
if(type=="indirect2"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.31))#
}#
#
if(type=="indirect3"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.305))#
}
print(round(ii/nSim,3))#
#
	g_pval_vec[ii]<-t1$g_pval#
	iv_pval_vec[ii]<-t1$iv_pval#
	g_onepval_vec[ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[ii]<-t1$iv_onesidepval#
}#
#
return(#
list(#
g_pval=powerlev(g_pval_vec),#
iv_pval=powerlev(iv_pval_vec),#
g_pval1=powerlev(g_onepval_vec),#
iv_pval1=powerlev(iv_onepval_vec)#
))#
}
p1<-my_rel_power(100,100,"NULL")  # g-comp appears conservative (two-sided case in particular)
p1
my_rel_power<-function(nSim=50, nn=200, type="NULL"){#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-standard_pval_vec<-rep(0,nSim)#
for(ii in 1:nSim){#
#
if(type=="NULL"){#
	t1<-testing(nn, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.31), u_=(2), h_=0.5)}#
#
if(type=="direct"){#
t1<-testing(nn, a_=logit(0.5+0.048), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)#
}#
#
if(type=="indirect"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))}#
if(type=="indirect2"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=0, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.31))#
}#
#
if(type=="indirect3"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=0, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.305))#
}#
print(round(ii/nSim,3))#
	standard_pval_vec[ii]<-t1$standard_pval#
	g_pval_vec[ii]<-t1$g_pval#
	iv_pval_vec[ii]<-t1$iv_pval#
	g_onepval_vec[ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[ii]<-t1$iv_onesidepval#
}#
#
return(#
list(#
standard_pval=powerlev(standard_pval_vec),#
g_pval=powerlev(g_pval_vec),#
iv_pval=powerlev(iv_pval_vec),#
g_pval1=powerlev(g_onepval_vec),#
iv_pval1=powerlev(iv_onepval_vec)#
))#
}
p1<-my_rel_power(100,100,"NULL")  # g-comp appears conservative (two-sided case in particular)
p1
p2<-my_rel_power(100,100,"direct") # g-comp has 0.370 power (iv: 0.074)
p2
p2<-my_rel_power(100,300,"direct") # g-comp has 0.370 power (iv: 0.074)
p2
p3<-my_rel_power(100,300,"indirect") # g-comp has 0.351 power (iv: 0.064)
p3
p1$g_pval[2]
c(p1$g_pval[2],p2$g_pval[2],p3$g_pval[2],p4$g_pval[2],p5$g_pval[2])
p4<-my_rel_power(100,300,"indirect2") # #
p5<-my_rel_power(100,300,"indirect3")
gcomp300<-c(p1$g_pval[2],p2$g_pval[2],p3$g_pval[2],p4$g_pval[2],p5$g_pval[2])#
iv300<-c(p1$iv_pval[2],p2$iv_pval[2],p3$iv_pval[2],p4$iv_pval[2],p5$iv_pval[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,100))#
lines(gcomp300)#
lines(iv300, col="blue")
gcomp300
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")
p1<-my_rel_power(1000,300,"NULL")  # g-comp appears conservative (two-sided case in particular)#
p2<-my_rel_power(1000,300,"direct") # g-comp has 0.370 power (iv: 0.074)#
p3<-my_rel_power(1000,300,"indirect") # g-comp has 0.351 power (iv: 0.064)#
p4<-my_rel_power(1000,300,"indirect2") # #
p5<-my_rel_power(1000,300,"indirect3") # #
gcomp300<-c(p1$g_pval[2],p2$g_pval[2],p3$g_pval[2],p4$g_pval[2],p5$g_pval[2])#
iv300<-c(p1$iv_pval[2],p2$iv_pval[2],p3$iv_pval[2],p4$iv_pval[2],p5$iv_pval[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")#
p1<-my_rel_power(1000,1000,"NULL")  # g-comp appears conservative (two-sided case in particular)#
p2<-my_rel_power(1000,1000,"direct") # g-comp has 0.370 power (iv: 0.074)#
p3<-my_rel_power(1000,1000,"indirect") # g-comp has 0.351 power (iv: 0.064)#
p4<-my_rel_power(1000,1000,"indirect2") # #
p5<-my_rel_power(1000,1000,"indirect3") # #
gcomp1000<-c(p1$g_pval[2],p2$g_pval[2],p3$g_pval[2],p4$g_pval[2],p5$g_pval[2])#
iv1000<-c(p1$iv_pval[2],p2$iv_pval[2],p3$iv_pval[2],p4$iv_pval[2],p5$iv_pval[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp1000)#
lines(iv1000, col="blue")
testing(1000, a_=0, a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)
testing(1000, a_=0, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)
standard_pval<-g_pval<-iv_pval<-rep(0,100)#
for(ii in 1:100){#
tt1<-testing(1000, a_=0, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)#
standard_pval[ii]<-tt1$standard_pval#
g_pval[ii]<-tt1$g_pval#
iv_pval[ii]<-tt1$iv_pval#
}#
powerlev(standard_pval)  	# 0.334 0.450  	# biased AWAY from the NULL#
powerlev(g_pval) 			# 0.027 0.071	# substantially conservative#
powerlev(iv_pval)			# 0.063 0.107	# somewhat liberal
testing(100, a_=logit(0.5+0.048), a0_a1=0, l1_a1=0, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)$true_effect
testing(100, a_=logit(0.5+0.048), a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=1, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.31))$true_effect
testing(100, a_=NA, a0_a1=0, l1_a1=1, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.305))$true_effect
my_rel_power<-function(nSim=50, nn=200, type="NULL"){#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-standard_pval_vec<-rep(0,nSim)#
for(ii in 1:nSim){#
#
if(type=="NULL"){#
	t1<-testing(nn, a_=0, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)}#
#
if(type=="direct"){#
t1<-testing(nn, a_=logit(0.5+0.048), a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)#
}#
#
if(type=="indirect"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))}#
if(type=="indirect2"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.31))#
}#
#
if(type=="indirect3"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.305))#
}#
print(round(ii/nSim,3))#
	standard_pval_vec[ii]<-t1$standard_pval#
	g_pval_vec[ii]<-t1$g_pval#
	iv_pval_vec[ii]<-t1$iv_pval#
	g_onepval_vec[ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[ii]<-t1$iv_onesidepval#
}#
#
return(#
list(#
standard_pval=powerlev(standard_pval_vec),#
g_pval=powerlev(g_pval_vec),#
iv_pval=powerlev(iv_pval_vec),#
g_pval1=powerlev(g_onepval_vec),#
iv_pval1=powerlev(iv_onepval_vec)#
))#
}#
tpp1<-my_rel_power(500,300,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tpp2<-my_rel_power(500,300,"direct") # g-comp has 0.370 power (iv: 0.074)#
tpp3<-my_rel_power(500,300,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tpp4<-my_rel_power(500,300,"indirect2") # #
tpp5<-my_rel_power(500,300,"indirect3") # #
gcomp300<-c(tpp1$g_pval[2],tpp2$g_pval[2],tpp3$g_pval[2],tpp4$g_pval[2],tpp5$g_pval[2])#
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")
tp1<-my_rel_power(1000,1000,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tp2<-my_rel_power(1000,1000,"direct") # g-comp has 0.370 power (iv: 0.074)#
tp3<-my_rel_power(1000,1000,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tp4<-my_rel_power(1000,1000,"indirect2") # #
tp5<-my_rel_power(1000,1000,"indirect3") # #
gcomp1000<-c(tp1$g_pval[2],tp2$g_pval[2],tp3$g_pval[2],tp4$g_pval[2],tp5$g_pval[2])#
iv1000<-c(tp1$iv_pval[2],tp2$iv_pval[2],tp3$iv_pval[2],tp4$iv_pval[2],tp5$iv_pval[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp1000)#
lines(iv1000, col="blue")
gcomp1000<-c(p1$g_pval[2],p2$g_pval[2],p3$g_pval[2],p4$g_pval[2],p5$g_pval[2])
iv1000<-c(p1$iv_pval[2],p2$iv_pval[2],p3$iv_pval[2],p4$iv_pval[2],p5$iv_pval[2])
lines(gcomp1000)
lines(iv1000, col="blue")
tp1
tpp1
testing(1000, a_=0, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)
p1
gcomp1000<-c(p1$g_pval1[2],p2$g_pval1[2],p3$g_pval1[2],p4$g_pval1[2],p5$g_pval1[2])
iv1000<-c(p1$iv_pval1[2],p2$iv_pval1[2],p3$iv_pval1[2],p4$iv_pval1[2],p5$iv_pval1[2])
lines(gcomp1000)
lines(iv1000, col="blue")
# It is realistic to assume that clinicians are more likely to prescribe #
# treatment(A0) to patients who are more ill(L0).  #
#
invlogit<-function(x){exp(x)/(1+exp(x))}#
logit<-function(x){log(x/(1-x))}#
powerlev<-function(x){c(mean(x<0.05), mean(x<0.10))}#
#
testing<-function(n=100, #
a_		=	0,#
a0_a1	=	0, #
l1_a1	=	0, #
a0_l1	=	0, #
u_		=	0, #
h_		=	0, #
a0_y		= 	a_, #
a1_y		=	a_, #
l1_y		=	0,#
interconstant=FALSE){#
justeffect<-FALSE#
if(n==1){justeffect<-TRUE}#
#
h_a0<-h_#
h_a1<-h_#
u0_l1<-u_#
u0_y<-u_#
g_h <- invlogit(0)#
H <- rbinom(n,1,g_h)		# 50/50#
#
g_u0<- invlogit(0)#
U0 <- rbinom(n,1, g_u0)		# 50/50#
#
inter_a0<-(-(h_a0*g_h))#
if(interconstant){inter_a0<-(-0.5)}#
g_a0 <- invlogit(inter_a0+(h_a0*H))#
A0 <- rbinom(n,1,g_a0)  # 50/50#
#
inter_l1<-(-mean(a0_l1*g_a0 +u0_l1*g_u0))#
if(interconstant){inter_l1<-(-0.75)}#
g_l1<-invlogit(inter_l1 + (a0_l1*A0 + u0_l1*U0) )#
L1<-rbinom(n,1,g_l1)		#
#
inter_a1<-(-mean(h_a1*g_h+a0_a1*g_a0+l1_a1*g_l1))#
if(interconstant){inter_a1<-(-0.95)}#
g_a1<-invlogit(inter_a1 + (h_a1*H+a0_a1*A0+l1_a1*L1))#
A1<-rbinom(n,1,g_a1)#
#
inter_y<-(-mean(a0_y*g_a0 + a1_y*g_a1+ u0_y*g_u0 +l1_y*g_l1))#
if(interconstant){inter_y<-(-1)}#
g_y<-invlogit(inter_y+(a0_y*A0 + a1_y*A1+ u0_y*U0+l1_y*L1))#
Y<-rbinom(n,1,g_y)#
summary(lm(g_y~A0+ A1+ U0+ L1))#
#
simdata<-data.frame(H,U0,A0,L1,A1,Y)#
simdata_obs<-data.frame(A0,L1,A1,Y)#
if(sum(c(unlist(table(simdata_obs)))<3)>0){print(paste("Sparse?", sum(c(unlist(table(simdata_obs)))<3)))}#
#
# Calculate the true treatment effect:#
# theta(a0,a1) = Pr(Y|A0=a0,A1=a1,U0,L1)*Pr(L1|A0=a0,U0)*Pr(U0)#
#
true_theta_function<-function(a0,a1){#
sum2<-0#
for(u0 in c(0,1)){#
	for(l1 in c(0,1)){#
		sum1<-#
((u0*g_u0) +(1-u0)*(1-g_u0))*#
#
(#
(l1*invlogit(inter_l1 + (a0_l1*a0 + u0_l1*u0) )) +#
((1-l1)*(1-invlogit(inter_l1 + (a0_l1*a0 + u0_l1*u0)))) #
)*#
invlogit(inter_y+(a0_y*a0 + a1_y*a1+ u0_y*u0 + l1_y*l1))#
#
		sum2<-sum2+sum1#
	}#
}#
return(sum2)}#
#
# The true joint causal effect of A on Y:#
true_effect<-round(true_theta_function(1,1)-true_theta_function(0,0),5)#
true_effect#
#
if(justeffect){return(true_effect)}#
if(!justeffect){#
########################################################################
# Functions#
####################################################################### #
makebeta<-function(veci, i, nm){#
            ss <- sum(veci)#
            nn <- length(veci)#
            pp <- (rbeta(nm, (ss + 1), (nn - ss + 1)))#
            if (i %in% 0) {return(1 - as.numeric(pp))}#
            if (i %in% 1) {return(as.numeric(pp))}}#
L1probB <- function(l1=c(1), a0=c(0,1), nm = 1) {#
            veci<-simdata$L1[simdata$A0 %in% a0]#
            makebeta(veci,l1, nm)}#
YprobB <- function(h=c(0,1), y=c(1), l1=c(0,1), a0=c(0,1), a1=c(0,1), nm = 1) {            #
veci<-simdata$Y[simdata$A0%in%a0 & simdata$A1%in%a1 & simdata$L1%in%l1]#
                  makebeta(veci,y, nm)}    #
################################################################## #
theta_function<-function(a0,a1){#
 sum2<-0#
	for(l1 in c(0,1)){#
		sum1<-L1probB(l1=l1, a0=a0)*YprobB(a0=a0, a1=a1,l1=l1)#
		sum2<-sum2+sum1}#
	return(sum2)}#
#
# The estimated joint causal effect of A on Y, by non-parametric g-computation:#
gcomp<-function(nB=500){#
	effect<-apply(cbind(1:nB),1,function(x){theta_function(1,1)-theta_function(0,0)})#
	pval<-1 - mean((effect) > 0)#
	twopval<-2*min(c((1 - mean((effect) > 0)), (1 - mean((effect) < 0))))#
	return(list(effect=mean(effect), onesidepval=pval, twosidepval=twopval))}#
g_effect<-gcomp()	#
g_effect#
###################################################################
library(lmtest)#
# The standard estimated effect is dilluted:#
glmmod1<-glm(Y~A0+A1+L1, family="binomial")#
#print(summary(glmmod1))#
glmmod0<-glm(Y~L1, family="binomial")#
standard_pval<-lrtest(glmmod1, glmmod0)$"Pr(>Chisq)"[2]#
#
# The total causal effect of A0 on Y and of A1 on Y could be estimated using standard adjustment:#
glmmod<-glm(Y~A0, family="binomial")#
#
standard_A0_onesidepval<-(1-pnorm(coef(summary(glmmod))[2,3]))#
standard_A1_onesidepval<-(1-pnorm(coef(summary(glmmod1))[3,3]))#
#
standard_A0_pval<-coef(summary(glmmod))[2,c(4)]#
standard_A1_pval<-coef(summary(glmmod1))[3,c(4)]#
####################################################################### #
# The IV estimated effect is dilluted:#
glmmod<-glm(Y~H, family="binomial")#
iv_onesidepval<-(1-pnorm(coef(summary(glmmod))[2,3]))#
iv_pval<-coef(summary(glmmod))[2,4]#
####################################################################### #
return(list(#
true_effect				= true_effect, #
g_effect					= g_effect$effect,#
#
standard_pval 			= standard_pval, #
standard_A0_pval			= standard_A0_pval,  #
standard_A1_pval			= standard_A1_pval,#
g_pval					= g_effect$twosidepval,#
iv_pval					= iv_pval, #
#
standard_A0_onesidepval = standard_A0_onesidepval,#
standard_A1_onesidepval = standard_A1_onesidepval,#
g_effect_onesidepval	= g_effect$onesidepval,#
iv_onesidepval			= iv_onesidepval#
))}}
my_rel_power<-function(nSim=50, nn=200, type="NULL"){#
g_pval_vec<-iv_pval_vec<-g_onepval_vec<-iv_onepval_vec <-standard_pval_vec<-rep(0,nSim)#
for(ii in 1:nSim){#
#
if(type=="NULL"){#
	t1<-testing(nn, a_=0, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=(2), h_=2.5)}#
#
if(type=="direct"){#
t1<-testing(nn, a_=logit(0.5+0.048), a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, l1_y=0)#
}#
#
if(type=="indirect"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.305))}#
if(type=="indirect2"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=2*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.31))#
}#
#
if(type=="indirect3"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=0.50*logit(0.5-0.305), u_=2, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.305))#
}#
if(type=="directU"){#
t1<-testing(nn, a_=logit(0.5+0.0375), a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.305), u_=0, h_=2.5, l1_y=0)#
}#
#
if(type=="indirectU"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=logit(0.5-0.255), u_=0, h_=2.5, a0_y = 0, a1_y =  0, l1_y=logit(0.5-0.255))}#
if(type=="indirect2U"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=2*logit(0.5-0.259), u_=0, h_=2.5, a0_y = 0, a1_y =  0, l1_y=0.51*logit(0.5-0.259))#
}#
#
if(type=="indirect3U"){#
t1<-testing(nn, a_=NA, a0_a1=0, l1_a1=1, a0_l1=0.50*logit(0.5-0.2565), u_=0, h_=2.5, a0_y = 0, a1_y =  0, l1_y=2.1*logit(0.5-0.2565))#
}#
print(round(ii/nSim,3))#
	standard_pval_vec[ii]<-t1$standard_pval#
	g_pval_vec[ii]<-t1$g_pval#
	iv_pval_vec[ii]<-t1$iv_pval#
	g_onepval_vec[ii]<-t1$g_effect_onesidepval#
	iv_onepval_vec[ii]<-t1$iv_onesidepval#
}#
#
return(#
list(#
standard_pval=powerlev(standard_pval_vec),#
g_pval=powerlev(g_pval_vec),#
iv_pval=powerlev(iv_pval_vec),#
g_pval1=powerlev(g_onepval_vec),#
iv_pval1=powerlev(iv_onepval_vec)#
))#
}
tpp1<-my_rel_power(200,300,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tpp2<-my_rel_power(200,300,"direct") # g-comp has 0.370 power (iv: 0.074)#
tpp3<-my_rel_power(200,300,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tpp4<-my_rel_power(200,300,"indirect2") # #
tpp5<-my_rel_power(200,300,"indirect3") # #
tpp6<-my_rel_power(200,300,"directU") # g-comp has 0.370 power (iv: 0.074)#
tpp7<-my_rel_power(200,300,"indirectU") # g-comp has 0.351 power (iv: 0.064)#
tpp8<-my_rel_power(200,300,"indirect2U") # #
tpp9<-my_rel_power(200,300,"indirect3U")
gcomp300<-c(tpp1$g_pval[2],tpp2$g_pval[2],tpp3$g_pval[2],tpp4$g_pval[2],tpp5$g_pval[2],tpp6$g_pval[2],tpp7$g_pval[2],tpp8$g_pval[2],tpp9$g_pval[2])
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2])
plot(0,xlim=c(1,5),ylim=c(0,1))
lines(gcomp300)
lines(iv300, col="blue")
plot(0,xlim=c(1,10),ylim=c(0,1))
lines(gcomp300)
lines(iv300, col="blue")
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2],tpp6$iv_pval[2],tpp7$iv_pval[2],tpp8$iv_pval[2],tpp9$iv_pval[2])
lines(iv300, col="blue")
gcomp300<-c(tpp1$g_pval[2],tpp2$g_pval[2],tpp3$g_pval[2],tpp4$g_pval[2],tpp5$g_pval[2],tpp6$g_pval[2],tpp7$g_pval[2],tpp8$g_pval[2],tpp9$g_pval[2])#
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2],tpp6$iv_pval[2],tpp7$iv_pval[2],tpp8$iv_pval[2],tpp9$iv_pval[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")#
#one-sided#
gcomp300<-c(tpp1$g_pval1[2],tpp2$g_pval1[2],tpp3$g_pval1[2],tpp4$g_pval1[2],tpp5$g_pval1[2],tpp6$g_pval1[2],tpp7$g_pval1[2],tpp8$g_pval1[2],tpp9$g_pval1[2])#
iv300<-c(tpp1$iv_pval1[2],tpp2$iv_pval1[2],tpp3$iv_pval1[2],tpp4$iv_pval1[2],tpp5$iv_pval1[2],tpp6$iv_pval1[2],tpp7$iv_pval1[2],tpp8$iv_pval1[2],tpp9$iv_pval1[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")
tpp1<-my_rel_power(1200,300,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tpp2<-my_rel_power(1200,300,"direct") # g-comp has 0.370 power (iv: 0.074)#
tpp3<-my_rel_power(1200,300,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tpp4<-my_rel_power(1200,300,"indirect2") # #
tpp5<-my_rel_power(1200,300,"indirect3") # #
tpp6<-my_rel_power(1200,300,"directU") # g-comp has 0.370 power (iv: 0.074)#
tpp7<-my_rel_power(1200,300,"indirectU") # g-comp has 0.351 power (iv: 0.064)#
tpp8<-my_rel_power(1200,300,"indirect2U") # #
tpp9<-my_rel_power(1200,300,"indirect3U") # #
gcomp300<-c(tpp1$g_pval[2],tpp2$g_pval[2],tpp3$g_pval[2],tpp4$g_pval[2],tpp5$g_pval[2],tpp6$g_pval[2],tpp7$g_pval[2],tpp8$g_pval[2],tpp9$g_pval[2])#
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2],tpp6$iv_pval[2],tpp7$iv_pval[2],tpp8$iv_pval[2],tpp9$iv_pval[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")#
#one-sided#
gcomp300<-c(tpp1$g_pval1[2],tpp2$g_pval1[2],tpp3$g_pval1[2],tpp4$g_pval1[2],tpp5$g_pval1[2],tpp6$g_pval1[2],tpp7$g_pval1[2],tpp8$g_pval1[2],tpp9$g_pval1[2])#
iv300<-c(tpp1$iv_pval1[2],tpp2$iv_pval1[2],tpp3$iv_pval1[2],tpp4$iv_pval1[2],tpp5$iv_pval1[2],tpp6$iv_pval1[2],tpp7$iv_pval1[2],tpp8$iv_pval1[2],tpp9$iv_pval1[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")
tpp1<-my_rel_power(5000,300,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tpp2<-my_rel_power(5000,300,"direct") # g-comp has 0.370 power (iv: 0.074)#
tpp3<-my_rel_power(5000,300,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tpp4<-my_rel_power(5000,300,"indirect2") # #
tpp5<-my_rel_power(5000,300,"indirect3") # #
tpp6<-my_rel_power(5000,300,"directU") # g-comp has 0.370 power (iv: 0.074)#
tpp7<-my_rel_power(5000,300,"indirectU") # g-comp has 0.351 power (iv: 0.064)#
tpp8<-my_rel_power(5000,300,"indirect2U") # #
tpp9<-my_rel_power(5000,300,"indirect3U")
tpp1<-my_rel_power(5000,200,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tpp2<-my_rel_power(5000,200,"direct") # g-comp has 0.370 power (iv: 0.074)#
tpp3<-my_rel_power(5000,200,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tpp4<-my_rel_power(5000,200,"indirect2") # #
tpp5<-my_rel_power(5000,200,"indirect3") # #
tpp6<-my_rel_power(5000,200,"directU") # g-comp has 0.370 power (iv: 0.074)#
tpp7<-my_rel_power(5000,200,"indirectU") # g-comp has 0.351 power (iv: 0.064)#
tpp8<-my_rel_power(5000,200,"indirect2U") # #
tpp9<-my_rel_power(5000,200,"indirect3U")
gcomp300<-c(tpp1$g_pval[2],tpp2$g_pval[2],tpp3$g_pval[2],tpp4$g_pval[2],tpp5$g_pval[2],tpp6$g_pval[2],tpp7$g_pval[2],tpp8$g_pval[2],tpp9$g_pval[2])#
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2],tpp6$iv_pval[2],tpp7$iv_pval[2],tpp8$iv_pval[2],tpp9$iv_pval[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")
tpp1<-my_rel_power(15000,200,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tpp2<-my_rel_power(15000,200,"direct") # g-comp has 0.370 power (iv: 0.074)#
tpp3<-my_rel_power(15000,200,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tpp4<-my_rel_power(15000,200,"indirect2") # #
tpp5<-my_rel_power(15000,200,"indirect3") # #
tpp6<-my_rel_power(15000,200,"directU") # g-comp has 0.370 power (iv: 0.074)#
tpp7<-my_rel_power(15000,200,"indirectU") # g-comp has 0.351 power (iv: 0.064)#
tpp8<-my_rel_power(15000,200,"indirect2U") # #
tpp9<-my_rel_power(15000,200,"indirect3U") # #
gcomp300<-c(tpp1$g_pval[2],tpp2$g_pval[2],tpp3$g_pval[2],tpp4$g_pval[2],tpp5$g_pval[2],tpp6$g_pval[2],tpp7$g_pval[2],tpp8$g_pval[2],tpp9$g_pval[2])#
iv300<-c(tpp1$iv_pval[2],tpp2$iv_pval[2],tpp3$iv_pval[2],tpp4$iv_pval[2],tpp5$iv_pval[2],tpp6$iv_pval[2],tpp7$iv_pval[2],tpp8$iv_pval[2],tpp9$iv_pval[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")#
#one-sided#
gcomp300<-c(tpp1$g_pval1[2],tpp2$g_pval1[2],tpp3$g_pval1[2],tpp4$g_pval1[2],tpp5$g_pval1[2],tpp6$g_pval1[2],tpp7$g_pval1[2],tpp8$g_pval1[2],tpp9$g_pval1[2])#
iv300<-c(tpp1$iv_pval1[2],tpp2$iv_pval1[2],tpp3$iv_pval1[2],tpp4$iv_pval1[2],tpp5$iv_pval1[2],tpp6$iv_pval1[2],tpp7$iv_pval1[2],tpp8$iv_pval1[2],tpp9$iv_pval1[2])#
#
plot(0,xlim=c(1,10),ylim=c(0,1))#
lines(gcomp300)#
lines(iv300, col="blue")#
tp1<-my_rel_power(10000,1000,"NULL")  # g-comp appears conservative (two-sided case in particular)#
tp2<-my_rel_power(10000,1000,"direct") # g-comp has 0.370 power (iv: 0.074)#
tp3<-my_rel_power(10000,1000,"indirect") # g-comp has 0.351 power (iv: 0.064)#
tp4<-my_rel_power(10000,1000,"indirect2") # #
tp5<-my_rel_power(10000,1000,"indirect3") # #
gcomp1000<-c(tp1$g_pval[2],tp2$g_pval[2],tp3$g_pval[2],tp4$g_pval[2],tp5$g_pval[2])#
iv1000<-c(tp1$iv_pval[2],tp2$iv_pval[2],tp3$iv_pval[2],tp4$iv_pval[2],tp5$iv_pval[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp1000)#
lines(iv1000, col="blue")#
#
##########
gcomp1000<-c(p1$g_pval1[2],p2$g_pval1[2],p3$g_pval1[2],p4$g_pval1[2],p5$g_pval1[2])#
iv1000<-c(p1$iv_pval1[2],p2$iv_pval1[2],p3$iv_pval1[2],p4$iv_pval1[2],p5$iv_pval1[2])#
#
plot(0,xlim=c(1,5),ylim=c(0,1))#
lines(gcomp1000)#
lines(iv1000, col="blue")
