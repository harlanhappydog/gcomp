shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
runApp('Documents/KahlilShiny/ShinyAppEx')
runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
state.abb
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/SuperZip')
shiny::runApp('Documents/KahlilShiny/SuperZip')
library(rsconnect)
rsconnect::setAccountInfo(name='hhappydog', token='D50C5882EB6783DEDCB8D24E9D38755A', secret='sgEIyUClAJS6Yxa/qt5G+bOrd2wC24Em3ExzfYbw')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
rsconnect::deployApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
3^8
#Need to make meta data for each table and explain what it is. SEE: Metadata.xlsx
#Reference for this code:  http://www.r-bloggers.com/getting-started-with-postgresql-in-r/
rm(list=ls())
#file.choose()
#!!!!!!!!! Enter Year of Annual Report (YAR)
YAR <- 2016
# ATTENTION:  You must:  install.packages("RPostgreSQL")
require("RPostgreSQL")
#Documentation for this plugin:  https://cran.r-project.org/web/packages/RPostgreSQL/RPostgreSQL.pdf
#### CREATE A CONNECTION
# enter in password here
pw <- {  "tree43pgs"}
usr <- {  "david"   }  #we can make a new user at some point.  this is read only access.  newton has access to a login with read/write access
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "SCPIMS",
host = "192.241.213.120", port = 5432,
user = usr, password = pw)
rm(pw) # removes the password from memory
rm(usr) #remove the username from memory
# check for the table adelantados
dbExistsTable(con, "adelantados")
# IF TRUE then the connection is working to PGS
#List of Tables
dbListTables(con)
###Tables of interest:
##Producer Information
#informacion_de_productor - Producer Information (not year specific)
#documentos_pv - PV Documentation Information (year specific)
#parcels - Parcel information
#pagos - PES to farmers
#adelantados - Loans to Farmers
##Monitoring Information
#monitoreo - Parcel level
#monitoreo_ao - Parcel Level by year
#monitoreo_puntos - Point level by year
#Monitoring_tree - Tree Level by year
#Load a tables
AdvancePayments <- dbGetQuery(con, "SELECT * from adelantados")  #Replace adelantados for another table name
FarmerInfo <- dbGetQuery(con, "SELECT * from informacion_de_productor")
ParcelInfo <- dbGetQuery(con, "SELECT * from parcels")
pagos<- dbGetQuery(con, "SELECT * from pagos")
FarmerYearInfo <- dbGetQuery(con, "SELECT * from documentos_pv")
informacion_de_productor <-dbGetQuery(con, "SELECT * from informacion_de_productor")
documentos_pv_fotos <-dbGetQuery(con, "SELECT * from documentos_pv_fotos")
informacion_de_productor_fotos<-dbGetQuery(con, "SELECT * from informacion_de_productor_fotos")
informacion_de_productor_fotos$link
informacion_de_productor_fotos <-informacion_de_productor_fotos[informacion_de_productor_fotos$field=="productor_foto",]
photos<-data.frame(Id=apply(cbind(1:length(informacion_de_productor_fotos$caption)),1,function(i) strsplit(informacion_de_productor_fotos$caption, " ")[[i]][1]),informacion_de_productor_fotos)
head(photos)
head(photos)
mydat0<-data.frame(substr(ParcelInfo$un_par,1,8),ParcelInfo$un_par,ParcelInfo$tech_spec, ParcelInfo$year_of_planting_parcela, ParcelInfo$url_kml)
names(mydat0)<-c("Id","P_Id","System", "Year","kml")
mydat00<-merge(mydat0, informacion_de_productor[,c("nombre_de_productor","numero_de_plan_vivo", "entry_year")], by.y="numero_de_plan_vivo", by.x="Id", all.x=TRUE)
mydat<-merge(mydat00, photos,by="Id",all.x=TRUE)
head(mydat)
library(rgdal)
source('~/Documents/KahlilShiny/loaddata2.R', chdir = TRUE)
ls()
dim(mydat)
head(mydat)
dim(mydat)
sum(!is.na(mydat$kml))
mydat2<-(mydat[!is.na(mydat$kml),])
dim(mydat2)
mmm<-readRDS("/Users/Harlan/Documents/KahlilShiny/ShinyAppEx/data/superzip.rds")
mmm3<-mmm[1:dim(mydat2)[1],]
# download images:
for(ii in 1:dim(mydat2)[1]){
tryCatch(
download.file(
url=paste("http://", as.character(mydat2$link[ii]), sep=""), paste("~/Documents/KahlilShiny/image_folder/jpg_",mydat2$P_Id[ii],".jpg",sep="")),  error=function(e) NULL)
}
files <- dir('~/Documents/KahlilShiny/image_folder')
# Get list of all files
files <- dir('~/Documents/KahlilShiny/kml_folder')
# Set up color index
cindex <- 1
ccc <- sample(colors(),length(files))
# loop over all files and read in lines
mynames<-rep("",length(files))
mylastnames<-rep("",length(files))
coordsmat<-data.frame(files= files,lon=0,lat=0)
mycoords<-list()
i<-1
for(file in files){
    lines <- readLines(paste('~/Documents/KahlilShiny/kml_folder/',file,sep=''))
    lines2 <- lines[1]
    for(jj in 2:length(lines)){
        lines2 <- paste(lines2,lines[jj],sep='')
    }
    sql <- unlist(strsplit(lines2,'<coordinates>|</coordinates>'))[2]
sql2<-(strsplit(sql," "))[[1]]
coords<-t(matrix(as.numeric(unlist(strsplit(sql2,","))),2,))
mycoords[[i]]<-coords
coordsmat[i,c("lon","lat")]<-colMeans(coords)
sql <- unlist(strsplit(lines2,'<p><b>Last Name:</b>|</p><p>'))[3]
sql2<-(strsplit(sql,"</b>"))[[1]][2]
lastnames<-sql2
sql <- unlist(strsplit(lines2,'<b>Name:</b>|</p><p>'))[3]
#sql2<-(strsplit(sql,"</b>"))[[1]][2]
names<-sql
mylastnames[i]<-as.character(lastnames)
mynames[i]<-as.character(names)
i<-i+1
}
names(mycoords)<-c(paste(mydat2$P_Id))
mmm3$county <-mydat2$Id
mmm3$city.y<-mydat2$P_Id
mmm3$state.y<-mydat2$nombre_de_productor
mmm3$longitude<-coordsmat$lon
mmm3$latitude <-coordsmat$lat
mmm3$city.x <-mynames
mmm3$state.x <-mylastnames
mmm3$adultpop <-mydat2$System
head(mmm3)
saveRDS(mmm3,"~/Documents/KahlilShiny/ShinyAppEx/data/superzip2.rds")
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
results_50_10_25<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_50_10_25.csv")
results_100_10_25<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_100_10_25.csv")
results_200_10_25<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_200_10_25.csv")
results_50_25_10<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_50_25_10.csv")
results_100_25_10<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_100_25_10.csv")
results_200_25_10<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_200_25_10.csv")
results_50_25_25<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_50_25_25.csv")
results_100_25_25<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_100_25_25.csv")
results_200_25_25<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_200_25_25.csv")
results_50_0_0_1000<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_50_0_0_1000.csv")
results_100_0_0_1000<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_100_0_0_1000.csv")
results_200_0_0_1000<-read.csv("~/Desktop/UBC/NPSemiContinuousLongitudinalData/results/results_200_0_0_1000.csv")
results_100_0_0_1000
results_50_10_25
head(results_50_10_25
)
plot(tobitpval~newpval, col=1+is.na(twopartmod))
results<-results_50_10_25
plot(results$tobitpval~results$newpval, col=1+is.na(results$twopartmod))
plot(results$tobitpval~results$newpval, col=1+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1))
plot(log(1+results$tobitpval)~log(1+results$newpval), col=1+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1))
results<-results_200_25_25
plot(log(1+results$tobitpval)~log(1+results$newpval), col=1+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1))
plot((results$tobitpval)~(results$newpval), col=1+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1))
plot((results$tobitpval)~(results$newpval), col=1+is.na(results$twopartmod), xlim=c(0,0.1), ylim=c(0,0.1))
results<-results_100_25_25
plot((results$tobitpval)~(results$newpval), col=1+is.na(results$twopartmod), xlim=c(0,0.1), ylim=c(0,0.1))
plot((results$tobitpval)~(results$pval), col=1+is.na(results$twopartmod), xlim=c(0,0.1), ylim=c(0,0.1))
plot((results$tobitpval)~(results$pval), col=1+is.na(results$twopartmod), xlim=c(0,0.2), ylim=c(0,0.2))
plot((results$tobitpval)~(results$pval), col=1+is.na(results$twopartmod), xlim=c(0,0.5), ylim=c(0,0.5))
plot((results$tobitpval)~(results$pval), col=1+is.na(results$twopartmod), xlim=c(0,0.5), ylim=c(0,0.5), pch=20, cex=2)
plot((results$tobitpval)~(results$pval), col=2+is.na(results$twopartmod), xlim=c(0,0.5), ylim=c(0,0.5), pch=20, cex=2)
results<-results_100_10_10
results<-results_100_10_25
plot((results$tobitpval)~(results$pval), col=2+is.na(results$twopartmod), xlim=c(0,0.5), ylim=c(0,0.5), pch=20, cex=2)
results<-results_100_0_0_1000
plot((results$tobitpval)~(results$pval), col=2+is.na(results$twopartmod), xlim=c(0,0.5), ylim=c(0,0.5), pch=20, cex=2)
plot((results$tobitpval)~(results$pval), col=2+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1), pch=20, cex=2)
plot((results$tobitpval)~(results$newpval), col=2+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1), pch=20, cex=2)
plot((results$tobitpval)~(results$pval), col=2+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1), pch=20, cex=2)
plot((results$tobitpval)~(results$newpval), col=2+is.na(results$twopartmod), xlim=c(0,1), ylim=c(0,1), pch=20, cex=2)
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
library(rgdal)
source('~/Documents/KahlilShiny/loaddata2.R', chdir = TRUE)
ls()
head(mydat)
dim(mydat)
sum(!is.na(mydat$kml))
mydat2<-(mydat[!is.na(mydat$kml),])
dim(mydat2)
mmm<-readRDS("/Users/Harlan/Documents/KahlilShiny/ShinyAppEx/data/superzip.rds")
mmm3<-mmm[1:dim(mydat2)[1],]
# download images:
for(ii in 1:dim(mydat2)[1]){
tryCatch(
download.file(
url=paste("http://", as.character(mydat2$link[ii]), sep=""), paste("~/Documents/KahlilShiny/image_folder/jpg_",mydat2$P_Id[ii],".jpg",sep="")),  error=function(e) NULL)
}
files <- dir('~/Documents/KahlilShiny/image_folder')
# download kml files:
for(ii in 1:dim(mydat2)[1]){
if(!is.na(mydat2$kml[ii])){
download.file(url=as.character(mydat2$kml[ii]), paste("~/Documents/KahlilShiny/kml_folder/kml_",mydat2$P_Id[ii],".kml",sep=""))}}
# Get list of all files
files <- dir('~/Documents/KahlilShiny/kml_folder')
# Set up color index
cindex <- 1
ccc <- sample(colors(),length(files))
# loop over all files and read in lines
mynames<-rep("",length(files))
mylastnames<-rep("",length(files))
coordsmat<-data.frame(files= files,lon=0,lat=0)
mycoords<-list()
i<-1
for(file in files){
    lines <- readLines(paste('~/Documents/KahlilShiny/kml_folder/',file,sep=''))
    lines2 <- lines[1]
    for(jj in 2:length(lines)){
        lines2 <- paste(lines2,lines[jj],sep='')
    }
    sql <- unlist(strsplit(lines2,'<coordinates>|</coordinates>'))[2]
sql2<-(strsplit(sql," "))[[1]]
coords<-t(matrix(as.numeric(unlist(strsplit(sql2,","))),2,))
mycoords[[i]]<-coords
coordsmat[i,c("lon","lat")]<-colMeans(coords)
sql <- unlist(strsplit(lines2,'<p><b>Last Name:</b>|</p><p>'))[3]
sql2<-(strsplit(sql,"</b>"))[[1]][2]
lastnames<-sql2
sql <- unlist(strsplit(lines2,'<b>Name:</b>|</p><p>'))[3]
#sql2<-(strsplit(sql,"</b>"))[[1]][2]
names<-sql
mylastnames[i]<-as.character(lastnames)
mynames[i]<-as.character(names)
i<-i+1
}
names(mycoords)<-c(paste(mydat2$P_Id))
mmm3$county <-mydat2$Id
mmm3$city.y<-mydat2$P_Id
mmm3$state.y<-mydat2$nombre_de_productor
mmm3$longitude<-coordsmat$lon
mmm3$latitude <-coordsmat$lat
mmm3$city.x <-mynames
mmm3$state.x <-mylastnames
mmm3$adultpop <-mydat2$System
head(mmm3)
saveRDS(mmm3,"~/Documents/KahlilShiny/ShinyAppEx/data/superzip2.rds")
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
head(mmm3)
head(mydat2)
head(mmm3)
shiny::runApp('Documents/KahlilShiny/ShinyAppEx')
shiny::runApp('Documents/KahlilShiny/ShinyAppEx copy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
shiny::runApp('Documents/KahlilShiny/shinyappexcopy')
